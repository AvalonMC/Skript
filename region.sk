#every 1 seconds:
#	loop all players:
#		if loop-player is holding a wooden axe:
#			execute console command "/summon block_display %x position of loop-player's location% %y position of loop-player's location + 4% %z position of loop-player's location% {Passengers:[{id:""minecraft:block_display"",block_state:{Name:""minecraft:gray_stained_glass_pane"",Properties:{north:""true"",south:""true"",east:""false"",west:""false""}},transformation:[-0.0000f,-40.0000f,0.0000f,20.0000f,1.0000f,-0.0000f,0.0000f,20.0000f,0.0000f,0.0000f,40.0000f,-20.0000f,0.0000f,0.0000f,0.0000f,1.0000f]},{id:""minecraft:block_display"",block_state:{Name:""minecraft:gray_stained_glass_pane"",Properties:{north:""true"",south:""true"",east:""false"",west:""false""}},transformation:[-0.0000f,-40.0000f,0.0000f,20.0000f,1.0000f,-0.0000f,0.0000f,-20.0000f,0.0000f,0.0000f,40.0000f,-20.0000f,0.0000f,0.0000f,0.0000f,1.0000f]},{id:""minecraft:block_display"",block_state:{Name:""minecraft:gray_stained_glass_pane"",Properties:{north:""true"",south:""true"",east:""false"",west:""false""}},transformation:[-0.0000f,-40.0000f,0.0000f,20.0000f,-0.0000f,0.0000f,-40.0000f,20.5000f,1.0000f,-0.0000f,-0.0000f,-20.5000f,0.0000f,0.0000f,0.0000f,1.0000f]},{id:""minecraft:block_display"",block_state:{Name:""minecraft:gray_stained_glass_pane"",Properties:{north:""true"",south:""true"",east:""false"",west:""false""}},transformation:[-0.0000f,-40.0000f,0.0000f,20.0000f,-0.0000f,0.0000f,-40.0000f,20.5000f,1.0000f,-0.0000f,-0.0000f,19.5000f,0.0000f,0.0000f,0.0000f,1.0000f]},{id:""minecraft:block_display"",block_state:{Name:""minecraft:gray_stained_glass_pane"",Properties:{north:""true"",south:""true"",east:""false"",west:""false""}},transformation:[1.0000f,0.0000f,0.0000f,19.5000f,0.0000f,40.0000f,0.0000f,-19.5000f,0.0000f,0.0000f,40.0000f,-20.0000f,0.0000f,0.0000f,0.0000f,1.0000f]},{id:""minecraft:block_display"",block_state:{Name:""minecraft:gray_stained_glass_pane"",Properties:{north:""true"",south:""true"",east:""false"",west:""false""}},transformation:[1.0000f,0.0000f,0.0000f,-20.5000f,0.0000f,40.0000f,0.0000f,-19.5000f,0.0000f,0.0000f,40.0000f,-20.0000f,0.0000f,0.0000f,0.0000f,1.0000f]}]}"

variables:
    {world} = "plugins/WorldGuard/worlds/world/regions.yml"
    {nether} = "plugins/WorldGuard/worlds/world_nether/regions.yml"
    {end} = "plugins/WorldGuard/worlds/world_the_end/regions.yml"

function getRegionsAmount(playerName: player) :: number:
    set {_executionTime} to system millis
    set {_playerUUID} to uuid of {_playerName}
    if file {world} doesn't exist:
        message "Regions file of world is missing!" to console
    if file {nether} doesn't exist:
        message "Regions file of world_nether is missing!" to console
    if file {end} doesn't exist:
        message "Regions file of world_the_end is missing!" to console
    set {_regions_world::*} to yml node keys "regions" from file {world}
    set {_regions_nether::*} to yml node keys "regions" from file {nether}
    set {_regions_end::*} to yml node keys "regions" from file {end}
    set {_playerRegionsCount} to 0
    loop {_regions_world::*}:
        if loop-value partially match "owners.unique-ids":
            set {_region::*} to yml list "regions.%loop-value%" from file {world}
            if {_region::1} partially match {_playerUUID}:
                set {_playerRegionsCount} to {_playerRegionsCount} + 1
    loop {_regions_nether::*}:
        if loop-value partially match "owners.unique-ids":
            set {_region::*} to yml list "regions.%loop-value%" from file {nether}
            if {_region::1} partially match {_playerUUID}:
                set {_playerRegionsCount} to {_playerRegionsCount} + 1
    loop {_regions_end::*}:
        if loop-value partially match "owners.unique-ids":
            set {_region::*} to yml list "regions.%loop-value%" from file {end}
            if {_region::1} partially match {_playerUUID}:
                set {_playerRegionsCount} to {_playerRegionsCount} + 1
                
    message "Get number of all regions of %{_playerName}% took %system millis - {_executionTime}%ms" to console
    return {_playerRegionsCount}

command /get_regions_of_player <player>:
    permission: skript.example.broadcast
    description: Broadcasts a message to everyone including console.
    trigger:
        message getRegionsAmount(arg-1) to player
    
